scrGantt As screen:
    LoadingSpinnerColor: =RGBA(100, 118, 132, 1)
    OnVisible: |
        =// Create empty collections
        ClearCollect(planTasks, [Blank()]);
        Clear(planTasks);
        ClearCollect(planDetails, [Blank()]);
        Clear(planDetails);
        ClearCollect(selectedPlanIds, [Blank()]);
        Clear(selectedPlanIds);
        ClearCollect(bucketsOfPlans, [Blank()]);
        Clear(bucketsOfPlans);
        ClearCollect(planColors, [Blank()]);
        Clear(planColors);
        ClearCollect(openAssigneePanesTaskIds, [Blank()]);
        Clear(openAssigneePanesTaskIds);
        Clear(colTaskChanges); Set(varOpenTask, Blank());
        
        // Clear labels filter
        Reset(selectLabelsFilter);
        
        // Initialize selecte year and month range
        Set(varSelectedYear, Year(Now()));
        Set(varSelectedStartMonth, Month(Now()) - 1);
        If(varSelectedStartMonth > 8, Set(varSelectedStartMonth, 8));
        If(varSelectedStartMonth = 0, Set(varSelectedStartMonth, 1));
        Set(varSelectedEndMonth, varSelectedStartMonth + 4);
        Set(varStartDate, Date(varSelectedYear, varSelectedStartMonth, 1));
        Set(varEndDate, DateAdd(Date(varSelectedYear, varSelectedEndMonth + 1, 1), -1, Days));
        
        // Get all tasks of selected plans, plan details and buckets
        ForAll(idsOfSelectedPlans,
            Concurrent(
                Collect(planTasks, Planner.ListTasksV3(id, "").value),
                Collect(planDetails, Planner.GetPlanDetails(id)),
                Collect(selectedPlanIds, id),
                Collect(bucketsOfPlans, 
                    Planner.ListBucketsV3(id, "").value
                )
            )
        );
        
        // Match colors defined in App OnStart to the selected plans
        ForAll(AddColumns(Sequence(CountRows(idsOfSelectedPlans)), "seqIndex", Value),
            Collect(planColors, 
                { 
                    colorSchema: First(Filter(colPlanColors, ThisRecord.Value.index = seqIndex)),
                    planId: Last(FirstN(idsOfSelectedPlans, Value)).id
                }
            )
        );
        
        // Add a blank row as the last task to enable adding new tasks
        Collect(planTasks, { id: Blank()});

    hiddenStuff As groupContainer:
        Height: =78
        Visible: =false
        Width: =127
        X: =1239
        Y: =690
        ZIndex: =3

        lblNumberOfDays As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Italic: =true
            Size: =13
            Text: =Round(varEndDate - varStartDate + 1, 0)
            Width: =105
            ZIndex: =1

        lblSingleDayWidth As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =13
            Text: =galVerticalLanes.Width / Value(lblNumberOfDays.Text)
            Y: =40
            ZIndex: =2

    lblPlanGantTitle As label:
        Align: =Align.Center
        BorderColor: =RGBA(32, 54, 71, 1)
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =Theme.Color.Light
        FontWeight: =FontWeight.Semibold
        Height: =79
        Size: =24
        Text: =""
        Width: =1366
        ZIndex: =4

    lblTotalTasks As label:
        Align: =Align.Center
        BorderColor: =RGBA(255, 255, 255, 1)
        BorderThickness: =2
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =Theme.Color.LighterDark
        FontWeight: =FontWeight.Bold
        Height: =53
        Size: =30
        Text: =Max(0, CountRows(galTasksFlexible.AllItems) - 1)
        Width: =103
        X: =1263
        ZIndex: =5

    lblTotalTasksTitle As label:
        Align: =Align.Center
        BorderColor: =RGBA(255, 255, 255, 1)
        BorderThickness: =2
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =Theme.Color.LighterDark
        FontWeight: =FontWeight.Semibold
        Height: =26
        Size: =10
        Text: ="tasks"
        Width: =103
        X: =1263
        Y: =53
        ZIndex: =6

    lblSelectedRange As label:
        Align: =Align.Right
        BorderColor: =RGBA(32, 54, 71, 1)
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FontWeight: =FontWeight.Semibold
        Height: =26
        Italic: =true
        Size: =12
        Text: =Text(Date(varSelectedYear, varSelectedStartMonth, 1), "[$-en-GB]mmmm") & " - " & Text(Date(varSelectedYear, varSelectedEndMonth, 1), "[$-en-GB]mmmm") & " of " & varSelectedYear
        Width: =271
        X: =990
        Y: =53
        ZIndex: =7

    gantt As groupContainer:
        Height: =506
        Width: =1366
        Y: =160
        ZIndex: =8

        canvas As groupContainer:
            Height: =506
            Width: =1205
            X: =80
            ZIndex: =5

            galVerticalLanes As gallery.galleryHorizontal:
                BorderColor: =RGBA(32, 54, 71, 1)
                Height: =475
                Items: |-
                    =AddColumns(
                        ForAll(
                            Sequence(Value(lblNumberOfDays.Text)),
                            {
                                index: Value,
                                date: DateAdd(varStartDate, Value - 1, Days)
                            }
                        ),
                        "isWeekend",
                        Weekday(date, Sunday) = 1 || Weekday(date, Sunday) = 7
                    )
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =galVerticalLanes.Width / CountRows(galVerticalLanes.AllItems)
                Width: =1205
                Y: =31
                ZIndex: =1

                iconDaySeparator As rectangle:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    BorderStyle: =BorderStyle.None
                    Fill: |-
                        =If (ThisItem.date = Date(Year(Now()), Month(Now()), Day(Now())), 
                            // Today
                            Theme.Color.LighterDark,
                            If(ThisItem.isWeekend && Day(ThisItem.date) > 1,
                                // Weekend
                                RGBA(0, 0, 0, .03),
                                // Normal
                                RGBA(230, 230, 230, 1)
                            )
                        )
                    Height: =galVerticalLanes.TemplateHeight - iconDaySeparator.Y
                    OnSelect: =Select(Parent)
                    Width: |-
                        =If (ThisItem.isWeekend && Day(ThisItem.date) > 1,
                            // Weekend -> full width
                            galVerticalLanes.TemplateWidth,
                            If (Day(ThisItem.date) = 1, 
                                // First day of the month
                                5, 
                                1
                            )
                        )
                    ZIndex: =1

            galTitlesSeparator As gallery.galleryHorizontal:
                BorderColor: =RGBA(32, 54, 71, 1)
                Height: =31
                Items: |-
                    =ForAll(
                        Sequence(Value(lblNumberOfDays.Text)),
                        {
                            index: Value,
                            date: DateAdd(varStartDate, Value - 1, Days)
                        }
                    )
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =galTitlesSeparator.Width / CountRows(galTitlesSeparator.AllItems)
                Width: =1205
                ZIndex: =2

                iconDaySeparator_1 As rectangle:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Fill: =RGBA(230, 230, 230, 1)
                    Height: =galTitlesSeparator.TemplateHeight - iconDaySeparator_1.Y
                    OnSelect: =Select(Parent)
                    Width: =If (Day(ThisItem.date) = 1, 5, 0)
                    ZIndex: =1

            galTitles As gallery.galleryHorizontal:
                BorderColor: =RGBA(32, 54, 71, 1)
                Height: =31
                Items: =Sequence(varSelectedEndMonth - varSelectedStartMonth + 1, varSelectedStartMonth)
                OnSelect: |
                    =Set(varSelectedStartMonth, ThisItem.Value); 
                    Set(varSelectedEndMonth, ThisItem.Value);
                    Set(varStartDate, Date(varSelectedYear, varSelectedStartMonth, 1));
                    Set(varEndDate, DateAdd(Date(varSelectedYear, varSelectedEndMonth + 1, 1), -1, Days));
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =galTitles.Width / CountRows(galTitles.AllItems)
                Width: =1205
                ZIndex: =3

                lblMonthNameHeader As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =31
                    OnSelect: =Select(Parent)
                    Size: =8
                    Text: =Text(Date(varSelectedYear, ThisItem.Value, 1), "[$-en-GB]mmmm")
                    Underline: =true
                    Width: =galTitles.TemplateWidth
                    ZIndex: =1

            iconLastSeparator As rectangle:
                BorderColor: =RGBA(32, 54, 71, 1)
                Fill: =RGBA(230, 230, 230, 1)
                Height: =gantt.Height
                Width: =2
                X: =galVerticalLanes.X + galVerticalLanes.Width - iconLastSeparator.Width
                ZIndex: =4

        tasks As groupContainer:
            Height: =474
            Width: =1366
            Y: =32
            ZIndex: =6

            galTasksFlexible As gallery.variableTemplateHeightGallery:
                BorderColor: =RGBA(32, 54, 71, 1)
                Height: =474
                Items: |-
                    =SortByColumns(
                        Filter(
                            AddColumns(
                                RenameColumns(
                                    RenameColumns(
                                        AddColumns(
                                            planTasks,
                                            "modifiedDueDate",
                                            // If due date is missing, but the task is in progress, use current date
                                            If (IsBlank(dueDateTime) && Value(ThisRecord.percentComplete) > 0 && Value(ThisRecord.percentComplete) < 100, 
                                                Now(),
                                                dueDateTime
                                            )
                                        ),
                                        "dueDateTime",
                                        "originalDueDate"
                                    ),
                                    "modifiedDueDate", 
                                    "dueDateTime"
                                ),
                                "startDate",
                                Coalesce(startDateTime, DateAdd(dueDateTime, -5, Days)),
                                "plan",
                                First(Filter(planDetails, id = planId)),
                                "categories",
                                Filter(
                                    [
                                        If(appliedCategories.category1, First(Filter(planDetails, id = planId)).categoryDescriptions.category1, ""),
                                        If(appliedCategories.category2, First(Filter(planDetails, id = planId)).categoryDescriptions.category2, ""),
                                        If(appliedCategories.category3, First(Filter(planDetails, id = planId)).categoryDescriptions.category3, ""),
                                        If(appliedCategories.category4, First(Filter(planDetails, id = planId)).categoryDescriptions.category4, ""),
                                        If(appliedCategories.category5, First(Filter(planDetails, id = planId)).categoryDescriptions.category5, ""),
                                        If(appliedCategories.category6, First(Filter(planDetails, id = planId)).categoryDescriptions.category6, ""),
                                        If(appliedCategories.category7, First(Filter(planDetails, id = planId)).categoryDescriptions.category7, ""),
                                        If(appliedCategories.category8, First(Filter(planDetails, id = planId)).categoryDescriptions.category8, ""),
                                        If(appliedCategories.category9, First(Filter(planDetails, id = planId)).categoryDescriptions.category9, ""),
                                        If(appliedCategories.category10, First(Filter(planDetails, id = planId)).categoryDescriptions.category10, ""),
                                        If(appliedCategories.category11, First(Filter(planDetails, id = planId)).categoryDescriptions.category11, ""),
                                        If(appliedCategories.category12, First(Filter(planDetails, id = planId)).categoryDescriptions.category12, ""),
                                        If(appliedCategories.category13, First(Filter(planDetails, id = planId)).categoryDescriptions.category13, ""),
                                        If(appliedCategories.category14, First(Filter(planDetails, id = planId)).categoryDescriptions.category14, ""),
                                        If(appliedCategories.category15, First(Filter(planDetails, id = planId)).categoryDescriptions.category15, ""),
                                        If(appliedCategories.category16, First(Filter(planDetails, id = planId)).categoryDescriptions.category16, ""),
                                        If(appliedCategories.category17, First(Filter(planDetails, id = planId)).categoryDescriptions.category17, ""),
                                        If(appliedCategories.category18, First(Filter(planDetails, id = planId)).categoryDescriptions.category18, ""),
                                        If(appliedCategories.category19, First(Filter(planDetails, id = planId)).categoryDescriptions.category19, ""),
                                        If(appliedCategories.category20, First(Filter(planDetails, id = planId)).categoryDescriptions.category20, ""),
                                        If(appliedCategories.category21, First(Filter(planDetails, id = planId)).categoryDescriptions.category21, ""),
                                        If(appliedCategories.category22, First(Filter(planDetails, id = planId)).categoryDescriptions.category22, ""),
                                        If(appliedCategories.category23, First(Filter(planDetails, id = planId)).categoryDescriptions.category23, ""),
                                        If(appliedCategories.category24, First(Filter(planDetails, id = planId)).categoryDescriptions.category24, "")
                                    ],
                                    Len(Value) > 0
                                ),
                                "taskLengthDays",
                                DateDiff(startDateTime, dueDateTime)
                            ),
                            // Always include the last blank task
                            IsBlank(id) ||
                            (
                                // Include items based on top plan selection
                                CountRows(Filter(selectedPlanIds, Value = planId)) > 0 &&
                                // Only include tasks for the selected range -> either start or end date 
                                (dueDateTime <= varEndDate && dueDateTime >= varStartDate || startDate <= varEndDate && startDate >= varStartDate) &&
                                (!cbExcludeCompleted.Value || IsBlank(completedDateTime)) &&
                                // Check for category filters
                                (
                                    CountRows(selectedPlanIds) <> 1 ||
                                    // Category filters apply
                                    If (IsBlank(selectLabelsFilter.Selected) || CountRows(selectLabelsFilter.SelectedItems) = 0, true, 
                                        appliedCategories.category1 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 1)) = 1 ||
                                        appliedCategories.category2 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 2)) = 1 ||
                                        appliedCategories.category3 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 3)) = 1 ||
                                        appliedCategories.category4 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 4)) = 1 ||
                                        appliedCategories.category5 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 5)) = 1 ||
                                        appliedCategories.category6 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 6)) = 1 ||
                                        appliedCategories.category7 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 7)) = 1 ||
                                        appliedCategories.category8 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 8)) = 1 ||
                                        appliedCategories.category9 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 9)) = 1 ||
                                        appliedCategories.category10 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 10)) = 1 ||
                                        appliedCategories.category11 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 11)) = 1 ||
                                        appliedCategories.category12 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 12)) = 1 ||
                                        appliedCategories.category13 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 13)) = 1 ||
                                        appliedCategories.category14 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 14)) = 1 ||
                                        appliedCategories.category15 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 15)) = 1 ||
                                        appliedCategories.category16 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 16)) = 1 ||
                                        appliedCategories.category17 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 17)) = 1 ||
                                        appliedCategories.category18 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 18)) = 1 ||
                                        appliedCategories.category19 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 19)) = 1 ||
                                        appliedCategories.category20 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 20)) = 1 ||
                                        appliedCategories.category21 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 21)) = 1 ||
                                        appliedCategories.category22 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 22)) = 1 ||
                                        appliedCategories.category23 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 23)) = 1 ||
                                        appliedCategories.category24 && CountRows(Filter(selectLabelsFilter.SelectedItems, Index = 24)) = 1 
                                    )
                                ) &&
                                // Check for bucket filter
                                (
                                    IsBlank(selectBucketFilter.Selected) || bucketId = selectBucketFilter.Selected.id
                                ) &&
                                // Check if My tasks only filter is set
                                (
                                    !cbMyTasksOnly.Value || CountRows(Filter(_assignments, userId = varCurrentUser.Id)) > 0
                                )
                            )
                        ),
                        "dueDateTime",
                        Ascending
                    )
                Layout: =Layout.Vertical
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =48
                Width: =1366
                ZIndex: =2

                lblTaskName As label:
                    Align: =Align.Right
                    BorderColor: =RGBA(99, 139, 44, 1)
                    BorderStyle: =BorderStyle.None
                    Color: =If (!IsBlank(ThisItem.completedDateTime), Gray, Theme.Color.Dark)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Bold
                    OnSelect: =Set(varOpenTask, Blank()) //If (varOpenTask <> ThisItem.id, Set(varOpenTask, ThisItem.id), Set(varOpenTask, Blank()))
                    Size: =8
                    Text: =ThisItem.title
                    Tooltip: =ThisItem.title
                    Visible: =!IsBlank(ThisItem.id)
                    Width: =btnTask.X + btnTask.Width
                    Wrap: =false
                    X: =2
                    Y: =3
                    ZIndex: =1

                lblStartDate As label:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =45
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =8
                    Text: =Text(DateAdd(First(galVerticalLanes.AllItems).date, sliderTaskPosition.Value - btnTask.Width / Value(lblSingleDayWidth.Text) / 2, Days), "d.m")
                    VerticalAlign: =VerticalAlign.Top
                    Visible: =!IsBlank(ThisItem.startDateTime)
                    Width: =33
                    X: |-
                        = Max(
                             If(
                                btnTask.Width < iconOpenTask.Width + lblStartDate.Width,
                                iconOpenTask.X - lblStartDate.Width,
                                btnTask.X
                            ), 
                            canvas.X
                        )
                    Y: =3
                    ZIndex: =2

                rectSeparator As rectangle:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Fill: =RGBA(237, 237, 237, 1)
                    Height: =2
                    OnSelect: =Select(Parent)
                    Width: =1285
                    X: =2
                    Y: =47
                    ZIndex: =3

                lblEndDate As label:
                    Align: =Align.Right
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =If (IsBlank(ThisItem.originalDueDate), Red, Theme.Color.Dark)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =45
                    OnSelect: =Select(Parent)
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =8
                    Text: |-
                        =Text(
                            DateAdd(First(galVerticalLanes.AllItems).date, sliderTaskPosition.Value  + btnTask.Width / Value(lblSingleDayWidth.Text) / 2, Days),
                            "[$-en-GB]d.m")
                    Tooltip: =If(IsBlank(ThisItem.originalDueDate), "Due date for the task is missing, using current time!")
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =50
                    X: =Min(btnTask.X + btnTask.Width, canvas.Width + canvas.X) - lblEndDate.Width
                    Y: =3
                    ZIndex: =4

                btnTask As button:
                    Align: =Align.Right
                    BorderColor: =First(Filter(planColors, planId = ThisItem.planId)).colorSchema.Value.chartColor
                    BorderThickness: =1
                    Color: =If (!IsBlank(ThisItem.completedDateTime), Gray, Theme.Color.Dark)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    Fill: =If (!IsBlank(ThisItem.completedDateTime), RGBA(237, 237, 237, .7), Theme.Color.TaskBackground)
                    FocusedBorderThickness: =Self.BorderThickness
                    FontWeight: =FontWeight.Bold
                    HoverColor: =btnTask.Color
                    HoverFill: =ColorFade(btnTask.Fill, -20%)
                    OnSelect: =If (varOpenTask = ThisItem.id, Set(varOpenTask, Blank()), Set(varOpenTask, ThisItem.id))
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =Self.Color
                    PressedFill: =Self.Fill
                    RadiusBottomLeft: =3
                    RadiusBottomRight: =3
                    RadiusTopLeft: =3
                    RadiusTopRight: =3
                    Size: =8
                    Text: =""
                    Visible: =!IsBlank(ThisItem.id)
                    Width: =Max(1, (ThisItem.dueDateTime - ThisItem.startDate )) * Value(lblSingleDayWidth.Text)
                    X: |-
                        =With({
                                dayWidth: Value(lblSingleDayWidth.Text),
                                leftOffset: canvas.X
                            },
                            With({
                                    currentX: (ThisItem.startDate - varStartDate - 1) * dayWidth 
                                        + dayWidth
                                        + leftOffset
                                },
                                currentX 
                                    - (currentX - (sliderTaskPosition.Value * dayWidth - Self.Width / 2 + leftOffset))
                            )
                        )
                    Y: =3
                    ZIndex: =5

                lblTaskBucketName As label:
                    Align: =Align.Right
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =43
                    OnSelect: =Select(Parent)
                    Size: =6
                    Text: =First(Filter(bucketsOfPlans, id = ThisItem.bucketId)).name
                    Width: =79
                    Y: =1
                    ZIndex: =6

                contAddTask As groupContainer:
                    Height: =48
                    Visible: =IsBlank(ThisItem.id)
                    Width: =canvas.Width
                    X: =canvas.X
                    ZIndex: =7

                    galAddButtons As gallery.galleryHorizontal:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        Height: =46
                        Items: |-
                            =AddColumns(
                                ForAll(
                                    Sequence(Value(lblNumberOfDays.Text)),
                                    {
                                        index: Value,
                                        date: DateAdd(varStartDate, Value - 1, Days)
                                    }
                                ),
                                "weekday",
                                Last(FirstN(Calendar.WeekdaysLong(), Weekday(date, Sunday))).Value
                            )
                        OnSelect: |-
                            =Reset(inputAddTaskTitle);
                            Reset(dateAddTaskStart);
                            Reset(dateAddTaskDue);
                            Reset(addTaskSelectBucket);
                            If (!varIsSettingAddNewTaskEndDate,
                                Set(varAddNewTaskStartDate, ThisItem.date); Set(varIsSettingAddNewTaskEndDate, true),
                                Set(varAddNewTaskEndDate, ThisItem.date); Set(varIsSettingAddNewTaskEndDate, false)
                            );
                        ShowScrollbar: =false
                        TemplatePadding: =0
                        TemplateSize: =galAddButtons.Width / CountRows(galAddButtons.AllItems)
                        Width: =1205
                        ZIndex: =2

                        iconAddTask As rectangle:
                            BorderColor: =RGBA(32, 54, 71, 1)
                            BorderStyle: =BorderStyle.None
                            Fill: |-
                                =If (
                                    !IsBlank(varAddNewTaskStartDate) && !IsBlank(varAddNewTaskEndDate) && ThisItem.date >= varAddNewTaskStartDate && ThisItem.date <= varAddNewTaskEndDate ||
                                    ThisItem.date = varAddNewTaskStartDate
                                    , Theme.Color.Light, RGBA(0, 230, 230, 0))
                            Height: =galAddButtons.TemplateHeight - iconAddTask.Y
                            HoverFill: =Theme.Color.Light
                            OnSelect: =Select(Parent)
                            Tooltip: =If (varIsSettingAddNewTaskEndDate, "Choose task end date as ", "Add task starting on ") & ThisItem.weekday & " " & Text(ThisItem.date, "[$-en-GB]d.m")
                            Width: =galAddButtons.TemplateWidth
                            ZIndex: =1

                contTaskRescheduling As groupContainer:
                    Height: =48
                    Visible: =!IsBlank(ThisItem.id)
                    Width: =canvas.Width
                    X: =canvas.X
                    ZIndex: =8

                    sliderTaskPosition As slider:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        BorderStyle: =BorderStyle.None
                        Default: |
                            =With({
                                    dayWidth: Value(lblSingleDayWidth.Text),
                                    leftOffset: canvas.X
                                },
                                With({
                                        currentTaskX: (ThisItem.startDate - varStartDate - 1) * dayWidth 
                                            + dayWidth
                                    },
                                    currentTaskX / dayWidth + DateDiff(ThisItem.startDate, ThisItem.dueDateTime, Days) / 2
                                )
                            )
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =0
                        HandleFill: =ColorFade(Theme.Color.TaskBackground, -90%)
                        HandleHoverFill: =Theme.Color.LighterDark
                        HandleSize: =10
                        Height: =20
                        Max: =Self.Width / Value(lblSingleDayWidth.Text)
                        OnChange: |-
                            =RemoveIf(colTaskChanges, taskId = ThisItem.id && changeType = "POSITION_CHANGE");
                            If (Self.Value <>
                                With({
                                        dayWidth: Value(lblSingleDayWidth.Text),
                                        leftOffset: canvas.X
                                    },
                                    With({
                                            currentTaskX: (ThisItem.startDate - varStartDate - 1) * dayWidth 
                                                + dayWidth
                                        },
                                        currentTaskX / dayWidth + DateDiff(ThisItem.startDate, ThisItem.dueDateTime, Days) / 2
                                    )
                                ) && !IsBlank(ThisItem.id),
                                Collect(colTaskChanges,
                                    {
                                        taskId: ThisItem.id,
                                        value: Self.Value,
                                        changeType: "POSITION_CHANGE",
                                        taskItem: ThisItem
                                    }
                                )
                            )
                        RailFill: =RGBA(128, 130, 133, 1)
                        RailThickness: =0
                        ShowValue: =false
                        ValueFill: =Theme.Color.TaskBackground
                        Width: =canvas.Width
                        Y: =15
                        ZIndex: =3

                contAssignees As groupContainer:
                    Height: =48
                    Visible: =!IsBlank(ThisItem.id)
                    X: =btnTask.X + btnTask.Width
                    ZIndex: =9

                    iconShowHideAssignees As icon.ChevronRight:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        Color: =Theme.Color.Dark
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(244, 244, 244, 1)
                        Height: =25
                        Icon: =If(CountRows(Filter(openAssigneePanesTaskIds, Value = ThisItem.id)) > 0, Icon.ChevronLeft, Icon.ChevronRight)
                        OnSelect: =If (CountRows(Filter(openAssigneePanesTaskIds, Value = ThisItem.id)) > 0, RemoveIf(openAssigneePanesTaskIds, Value = ThisItem.id), Collect(openAssigneePanesTaskIds, ThisItem.id))
                        Tooltip: =If (CountRows(Filter(openAssigneePanesTaskIds, Value = ThisItem.id)) > 0, "Hide assignee panel", "View assignees")
                        Visible: =!IsBlank(ThisItem.id) && varOpenTask <> ThisItem.id
                        Width: =20
                        Y: =10
                        ZIndex: =1

                    galAssignees As gallery.galleryHorizontal:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        Height: =48
                        Items: |-
                            =AddColumns(
                                ThisItem._assignments,
                                "displayName",
                                IfError(Office365Users.UserProfileV2(userId).displayName, "Unknown"),
                                "photo",
                                IfError(Office365Users.UserPhoto(userId), Blank()),
                                "hasPhoto",
                                IfError(Office365Users.UserPhotoMetadata(userId).HasPhoto, false)
                            )
                        TemplateSize: =35
                        Visible: =CountRows(Filter(openAssigneePanesTaskIds, Value = ThisItem.id)) > 0
                        Width: =500
                        X: =20
                        ZIndex: =2

                        imgAssignee As image:
                            BorderColor: =Theme.Color.LighterDark
                            BorderThickness: =3
                            DisabledBorderColor: =RGBA(166, 166, 166, 1)
                            DisabledFill: =RGBA(244, 244, 244, 1)
                            Height: =30
                            Image: =If (ThisItem.hasPhoto, ThisItem.photo, 'user-placeholder-image')
                            OnSelect: =Select(Parent)
                            RadiusBottomLeft: =15
                            RadiusBottomRight: =15
                            RadiusTopLeft: =15
                            RadiusTopRight: =15
                            Width: =30
                            Y: =3
                            ZIndex: =1

                contNewDueDate As groupContainer:
                    Height: =48
                    Visible: =!IsBlank(ThisItem.id)
                    Width: =canvas.Width - contNewDueDate.X + canvas.X
                    X: =btnTask.X + btnTask.Width + iconShowHideAssignees.X + iconShowHideAssignees.Width
                    ZIndex: =10

                    rectToggleRescheduling As rectangle:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        Fill: =RGBA(100, 118, 132, 0)
                        Height: =48
                        HoverFill: =RGBA(0, 0, 0, .1)
                        OnSelect: =If (varTaskSelectedForRescheduling <> ThisItem.id, Set(varTaskSelectedForRescheduling, ThisItem.id), Set(varTaskSelectedForRescheduling, Blank()))
                        Tooltip: ="Click to reschedule task due date"
                        Visible: =varTaskSelectedForRescheduling <> ThisItem.id && CountRows(Filter(colTaskChanges, taskId = ThisItem.id && changeType = "ENDDATE_CHANGE")) = 0
                        Width: =contNewDueDate.Width
                        ZIndex: =1

                    galRescheduleDays As gallery.galleryHorizontal:
                        BorderColor: =RGBA(32, 54, 71, 1)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =1
                        Height: =16
                        Items: |-
                            =AddColumns(
                                AddColumns(Sequence(Round( galRescheduleDays.Width / Value(lblSingleDayWidth.Text), 0)), 
                                    "taskId", ThisItem.id,
                                    "date", DateAdd(ThisItem.dueDateTime, 
                                        Value + (iconShowHideAssignees.X + iconShowHideAssignees.Width) / Value(lblSingleDayWidth.Text), 
                                        Days
                                    ),
                                    "dayCount", Value
                                ),
                                "weekday",
                                Last(FirstN(Calendar.WeekdaysLong(), Weekday(date, Sunday))).Value    
                            )
                        OnSelect: |-
                            =RemoveIf(colTaskChanges, taskId = ThisItem.taskId && changeType = "ENDDATE_CHANGE");
                                Collect(colTaskChanges,
                                    {
                                        taskId: ThisItem.taskId,
                                        value: ThisItem.dayCount + 2,
                                        dateValue: ThisItem.date,
                                        changeType: "ENDDATE_CHANGE",
                                        taskItem: First(Filter(galTasksFlexible.AllItems, id = ThisItem.taskId))
                                    }
                                );
                            Set(varTaskSelectedForRescheduling, Blank())
                        ShowScrollbar: =false
                        TemplatePadding: =0
                        TemplateSize: =Value(lblSingleDayWidth.Text)
                        Visible: =varTaskSelectedForRescheduling = ThisItem.id || CountRows(Filter(colTaskChanges, taskId = ThisItem.id && changeType = "ENDDATE_CHANGE")) > 0
                        Width: =rectToggleRescheduling.Width
                        Y: =15
                        ZIndex: =2

                        rectRescheduleDay As rectangle:
                            BorderColor: =RGBA(32, 54, 71, 1)
                            Fill: |
                                =With({
                                    selectedForTask: First(Filter(colTaskChanges, taskId = ThisItem.taskId && changeType = "ENDDATE_CHANGE"))
                                },
                                If (!IsBlank(selectedForTask) && ThisItem.date <= selectedForTask.dateValue, 
                                    If (!IsBlank(selectedForTask) && ThisItem.date = selectedForTask.dateValue,
                                    Theme.Color.Light,
                                    Theme.Color.TaskBackground), 
                                    RGBA(0, 0, 0, 0)
                                ))
                            Height: =Parent.Height
                            HoverFill: =RGBA(0, 121, 187, .3)
                            OnSelect: =Select(Parent)
                            Tooltip: ="Click to reschedule task end date"
                            Width: =Value(lblSingleDayWidth.Text)
                            ZIndex: =1

                lblTaskCategories As label:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =45
                    OnSelect: =Select(Parent)
                    Size: =6
                    Text: =Concat(ThisItem.categories, Value, ", ")
                    Width: =79
                    X: =lblLabelsTitle.X
                    ZIndex: =11

                iconOpenTask As icon.OpenInNewWindow:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Height: =15
                    Icon: =Icon.OpenInNewWindow
                    OnSelect: |-
                        =Launch("https://tasks.office.com/Home/Task/" & ThisItem.id)
                    PaddingRight: =3
                    PaddingTop: =3
                    Tooltip: ="Open task"
                    Visible: =!IsBlank(ThisItem.id)
                    Width: =15
                    X: =btnTask.X + btnTask.Width - iconOpenTask.Width
                    ZIndex: =12

        lblBucketHeading As label:
            Align: =Align.Right
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =Theme.Color.Dark
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =32
            Size: =8
            Text: ="Bucket"
            Width: =79
            X: =1
            ZIndex: =7

        iconBucketTitleSeparator As rectangle:
            BorderColor: =RGBA(99, 139, 44, 1)
            BorderStyle: =BorderStyle.None
            Fill: =Theme.Color.Dark
            Height: =1
            Width: =79
            X: =1
            Y: =32
            ZIndex: =8

        lblLabelsTitle As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =Theme.Color.Dark
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =32
            Size: =8
            Text: ="Labels"
            Width: =79
            X: =canvas.X + canvas.Width
            ZIndex: =9

        iconLabelsTitleSeparator As rectangle:
            BorderColor: =RGBA(99, 139, 44, 1)
            BorderStyle: =BorderStyle.None
            Fill: =Theme.Color.Dark
            Height: =1
            Width: =79
            X: =canvas.X + canvas.Width
            Y: =32
            ZIndex: =10

    monthSelector As groupContainer:
        Height: =36
        Width: =1366
        Y: =83
        ZIndex: =9

        galYearSelector As gallery.galleryHorizontal:
            BorderColor: =RGBA(32, 54, 71, 1)
            Height: =38
            Items: =Sequence(4, Year(Now()) - 1)
            OnSelect: |-
                =Set(varSelectedYear, ThisItem.Value);
                Set(varStartDate, Date(varSelectedYear, varSelectedStartMonth, 1));
                Set(varEndDate, DateAdd(Date(varSelectedYear, varSelectedEndMonth + 1, 1), -1, Days));
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =galYearSelector.Width / CountRows(galYearSelector.AllItems)
            Width: =478
            ZIndex: =1

            lblYear As label:
                Align: =Align.Center
                BorderColor: =RGBA(32, 54, 71, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =If (varSelectedYear = ThisItem.Value, Theme.Color.LighterDark, Theme.Color.Light)
                FontWeight: =FontWeight.Semibold
                Height: =38
                HoverFill: =Theme.Color.LighterDark
                OnSelect: =Select(Parent)
                Size: =20
                Text: =ThisItem.Value
                Width: =galYearSelector.TemplateWidth
                ZIndex: =1

        galMonthSelector As gallery.galleryHorizontal:
            BorderColor: =RGBA(32, 54, 71, 1)
            Height: =38
            Items: =Sequence(12)
            OnSelect: |-
                =If (ThisItem.Value < varSelectedStartMonth,
                    // Clicked on left area -> decrease the start month
                    Set(varSelectedStartMonth, ThisItem.Value),
                    If (ThisItem.Value > varSelectedEndMonth,
                        // Clicked on the right area -> increase the end month
                        Set(varSelectedEndMonth, ThisItem.Value),
                        If (ThisItem.Value = varSelectedStartMonth || ThisItem.Value = varSelectedEndMonth,
                            // Either clicked left or right border
                            If (ThisItem.Value = varSelectedStartMonth, Set(varSelectedStartMonth, varSelectedStartMonth + 1), Set(varSelectedEndMonth, varSelectedEndMonth - 1)),
                            // Clicked in between -> update closest
                            If (ThisItem.Value - varSelectedStartMonth < varSelectedEndMonth - ThisItem.Value,
                                Set(varSelectedStartMonth, ThisItem.Value),
                                Set(varSelectedEndMonth, ThisItem.Value)
                            )
                        )
                    )
                );
                Set(varStartDate, Date(varSelectedYear, varSelectedStartMonth, 1));
                Set(varEndDate, DateAdd(Date(varSelectedYear, varSelectedEndMonth + 1, 1), -1, Days));
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =galMonthSelector.Width / 12
            Width: =883
            X: =483
            ZIndex: =2

            lblMonthShortName As label:
                Align: =Align.Center
                BorderColor: =RGBA(32, 54, 71, 1)
                BorderStyle: =BorderStyle.None
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =If (varSelectedStartMonth <= ThisItem.Value && varSelectedEndMonth >= ThisItem.Value, Theme.Color.LighterDark, Theme.Color.Light)
                Height: =38
                HoverFill: =Theme.Color.LighterDark
                OnSelect: =Select(Parent)
                Size: =13
                Text: =Text(Date(varSelectedYear, ThisItem.Value, 1), "[$-en-GB]mmm")
                Width: =galMonthSelector.TemplateWidth + 2
                ZIndex: =1

    galPlanFilter As gallery.galleryHorizontal:
        BorderColor: =RGBA(32, 54, 71, 1)
        Height: =79
        Items: =idsOfSelectedPlans
        ShowScrollbar: =false
        TemplateSize: =196
        Width: =1261
        ZIndex: =10

        lblPlanFilterPlanName As label:
            Align: =Align.Center
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Fill: =If (CountRows(Filter(selectedPlanIds, Value = ThisItem.id)) > 0, Theme.Color.LighterDark, Theme.Color.Light)
            FontWeight: =FontWeight.Semibold
            Height: =69
            OnSelect: |
                =If (CountRows(Filter(selectedPlanIds, Value = ThisItem.id)) > 0, RemoveIf(selectedPlanIds, Value = ThisItem.id), Collect(selectedPlanIds, ThisItem.id));
                Reset(selectLabelsFilter);
            Size: =11
            Text: =ThisItem.title
            Width: =196
            ZIndex: =1

        iconOpenPlan As icon.OpenInNewWindow:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(232, 244, 217, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =28
            Icon: =Icon.OpenInNewWindow
            OnSelect: |-
                =Launch("https://tasks.office.com/Home/Planner/#/plantaskboard?planId=" & ThisItem.id)
            Tooltip: ="Open plan"
            Width: =15
            X: =175
            ZIndex: =2

        Rectangle2 As rectangle:
            BorderColor: =RGBA(32, 54, 71, 1)
            BorderStyle: =BorderStyle.None
            Fill: =First(Filter(planColors, planId = ThisItem.id)).colorSchema.Value.indicatorColor
            Height: =69
            OnSelect: =Select(Parent)
            Width: =4
            ZIndex: =3

    lblResetMonthSelection As label:
        Align: =Align.Right
        BorderColor: =RGBA(32, 54, 71, 1)
        Color: =Theme.Color.Dark
        DisabledColor: =RGBA(166, 166, 166, 1)
        Height: =20
        OnSelect: |-
            =Set(varSelectedYear, Year(Now()));
            Set(varSelectedStartMonth, Month(Now()) - 1);
            If(varSelectedStartMonth > 8, Set(varSelectedStartMonth, 8));
            If(varSelectedStartMonth = 0, Set(varSelectedStartMonth, 1));
            Set(varSelectedEndMonth, varSelectedStartMonth + 4);
            Set(varStartDate, Date(varSelectedYear, varSelectedStartMonth, 1));
            Set(varEndDate, DateAdd(Date(varSelectedYear, varSelectedEndMonth + 1, 1), -1, Days));
        Size: =8
        Text: ="Reset month selection"
        Underline: =true
        X: =1111
        Y: =38
        ZIndex: =12

    addTaskDialog As groupContainer:
        Fill: =Theme.Color.LighterDark
        Height: =467
        Visible: =!IsBlank(varAddNewTaskEndDate)
        Width: =611
        X: =337
        Y: =140
        ZIndex: =13

        btnSaveNewTask As button:
            Color: =Theme.Color.Dark
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If (Len(inputAddTaskTitle.Text) > 0, DisplayMode.Edit, DisplayMode.Disabled)
            Fill: =Theme.Color.Light
            FontWeight: =FontWeight.Semibold
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =Theme.Color.Dark
            OnSelect: |-
                =If (iconSaveChanges.Visible, Set(varSkipRefresh, false); Select(iconSaveChanges));
                Set(varSkipRefresh, false);
                Planner.CreateTaskV2(
                    addTaskSelectPlan.Selected.id,
                    addTaskEmojiPicker.Value & If(Len(addTaskEmojiPicker.Value) > 0, " ", "") & inputAddTaskTitle.Text,
                    {
                        startDateTime: DateAdd(dateAddTaskStart.SelectedDate, 12, Hours),
                        dueDateTime: DateAdd(dateAddTaskDue.SelectedDate, 12, Hours),
                        bucketId: addTaskSelectBucket.Selected.id
                    }
                );
                Select(iconRefreshTasks);
                Set(varAddNewTaskStartDate, Blank());Set(varAddNewTaskEndDate, Blank());
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =15
            Text: ="Save"
            Width: =83
            X: =315
            Y: =415
            ZIndex: =1

        btnCancelAddTask As button:
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(151, 0, 0, 1)
            FontWeight: =FontWeight.Semibold
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =Theme.Color.Dark
            OnSelect: =Set(varAddNewTaskStartDate, Blank()); Set(varAddNewTaskEndDate, Blank())
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =15
            Text: ="Cancel"
            Width: =83
            X: =20
            Y: =415
            ZIndex: =2

        lblAddNewTaskHeading As label:
            Align: =Align.Center
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Fill: =Theme.Color.Light
            Height: =43
            Size: =13
            Text: ="ADD NEW TASK"
            Width: =611
            ZIndex: =3

        lblAddTaskPlan As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Plan:"
            Width: =106
            X: =20
            Y: =60
            ZIndex: =4

        lblAddTaskStartDate As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Start date:"
            Width: =106
            X: =20
            Y: =100
            ZIndex: =5

        lblAddTaskDueDate As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Due date:"
            Width: =106
            X: =20
            Y: =140
            ZIndex: =6

        lblAddTaskTitle As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Task title:"
            Width: =106
            X: =20
            Y: =220
            ZIndex: =7

        dateAddTaskStart As datepicker:
            BorderColor: =Theme.Color.Dark
            CalendarHeaderFill: =RGBA(100, 118, 132, 1)
            Color: =RGBA(0, 0, 0, 1)
            DefaultDate: =varAddNewTaskStartDate
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =Theme.Color.Light
            Format: ="d.m.yyyy"
            Height: =30
            HoverDateFill: =RGBA(205, 209, 213, 1)
            IconBackground: =Theme.Color.Dark
            PaddingTop: =5
            SelectedDateFill: =RGBA(100, 118, 132, 1)
            Size: =10
            StartOfWeek: =StartOfWeek.Monday
            Width: =215
            X: =126
            Y: =105
            ZIndex: =8

        dateAddTaskDue As datepicker:
            BorderColor: =Theme.Color.Dark
            CalendarHeaderFill: =RGBA(100, 118, 132, 1)
            Color: =RGBA(0, 0, 0, 1)
            DefaultDate: =varAddNewTaskEndDate
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =Theme.Color.Light
            Format: ="d.m.yyyy"
            Height: =30
            HoverDateFill: =RGBA(205, 209, 213, 1)
            IconBackground: =Theme.Color.Dark
            PaddingTop: =5
            SelectedDateFill: =RGBA(100, 118, 132, 1)
            Size: =10
            StartOfWeek: =StartOfWeek.Monday
            Width: =215
            X: =126
            Y: =145
            ZIndex: =9

        inputAddTaskTitle As text:
            BorderColor: =RGBA(32, 54, 71, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =""
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =Theme.Color.Light
            FocusedBorderThickness: =4
            HintText: ="Enter task title..."
            HoverBorderColor: =RGBA(32, 54, 71, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(205, 209, 213, 1)
            Size: =13
            Width: =567
            X: =21
            Y: =257
            ZIndex: =10

        lblAddTaskBucket As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Bucket:"
            Width: =106
            X: =20
            Y: =180
            ZIndex: =11

        addTaskSelectBucket As dropdown:
            BorderColor: =RGBA(32, 54, 71, 1)
            ChevronBackground: =Theme.Color.Dark
            ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
            ChevronDisabledFill: =RGBA(244, 244, 244, 1)
            ChevronHoverBackground: =ColorFade(RGBA(100, 118, 132, 1), -20%)
            ChevronHoverFill: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =Theme.Color.Light
            Height: =30
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(205, 209, 213, 1)
            Items: =Filter(bucketsOfPlans, planId = addTaskSelectPlan.Selected.id)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(32, 54, 71, 1)
            SelectionFill: =Theme.Color.Dark
            Size: =10
            Width: =462
            X: =126
            Y: =185
            ZIndex: =12

        addTaskSelectPlan As dropdown:
            BorderColor: =RGBA(32, 54, 71, 1)
            ChevronBackground: =Theme.Color.Dark
            ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
            ChevronDisabledFill: =RGBA(244, 244, 244, 1)
            ChevronHoverBackground: =ColorFade(RGBA(100, 118, 132, 1), -20%)
            ChevronHoverFill: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If (CountRows(selectedPlanIds) > 1, DisplayMode.Edit, DisplayMode.Disabled)
            Fill: =Theme.Color.Light
            Height: =30
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(205, 209, 213, 1)
            Items: =idsOfSelectedPlans
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(32, 54, 71, 1)
            SelectionFill: =Theme.Color.Dark
            Size: =10
            Width: =462
            X: =126
            Y: =65
            ZIndex: =13

        lblAddTaskEmojiTitle As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: |-
                ="Task emoji:"
            Width: =106
            X: =21
            Y: =297
            ZIndex: =14

        lblEmojiInfo As label:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =33
            Size: =8
            Text: ="The task title will be prefixed with the selected emoji"
            Width: =181
            X: =160
            Y: =304
            ZIndex: =15

        "addTaskEmojiPicker As 'Emoji Picker'":
            Height: =159
            Visible: =true
            X: =126
            Y: =304
            ZIndex: =16

        btnSaveNewTaskAndOpen As button:
            Color: =Theme.Color.Dark
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If (Len(inputAddTaskTitle.Text) > 0, DisplayMode.Edit, DisplayMode.Disabled)
            Fill: =Theme.Color.Light
            FontWeight: =FontWeight.Semibold
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =Theme.Color.Dark
            OnSelect: |-
                =If (iconSaveChanges.Visible, Set(varSkipRefresh, true); Select(iconSaveChanges));
                Set(varSkipRefresh, false);
                Set(createdTask, Planner.CreateTaskV2(
                    addTaskSelectPlan.Selected.id,
                    addTaskEmojiPicker.Value & If(Len(addTaskEmojiPicker.Value) > 0, " ", "") & inputAddTaskTitle.Text,
                    {
                        startDateTime: DateAdd(dateAddTaskStart.SelectedDate, 12, Hours),
                        dueDateTime: DateAdd(dateAddTaskDue.SelectedDate, 12, Hours),
                        bucketId: addTaskSelectBucket.Selected.id
                    }
                ));
                Select(iconRefreshTasks);
                Set(varAddNewTaskStartDate, Blank());Set(varAddNewTaskEndDate, Blank());
                Launch("https://tasks.office.com/Home/Task/" & createdTask.id);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =15
            Text: ="Save and open"
            Width: =177
            X: =410
            Y: =415
            ZIndex: =17

        iconOpenTask_1 As icon.OpenInNewWindow:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =Theme.Color.Dark
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =15
            Icon: =Icon.OpenInNewWindow
            PaddingRight: =3
            PaddingTop: =3
            Tooltip: ="Open task"
            Width: =15
            X: =572
            Y: =415
            ZIndex: =18

    lblDisplayAllAssignees As label:
        Align: =Align.Right
        BorderColor: =RGBA(32, 54, 71, 1)
        Color: =Theme.Color.Dark
        DisabledColor: =RGBA(166, 166, 166, 1)
        Height: =19
        OnSelect: |-
            =Clear(openAssigneePanesTaskIds);
            ForAll(planTasks, Collect(openAssigneePanesTaskIds, id));
        Size: =10
        Text: ="Display all assignees"
        Underline: =true
        X: =1132
        Y: =141
        ZIndex: =14

    footer As groupContainer:
        Fill: =Theme.Color.Light
        Height: =102
        Width: =1366
        Y: =666
        ZIndex: =15

        bottomFilters As groupContainer:
            Height: =102
            Width: =1206
            X: =40
            ZIndex: =1

            categoryFilters As groupContainer:
                Height: =102
                Visible: =CountRows(selectedPlanIds) = 1
                Width: =503
                X: =703
                ZIndex: =2

                lblCatFilterTitle As label:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Size: =12
                    Text: ="Filter by label"
                    Width: =187
                    ZIndex: =7

                selectLabelsFilter As combobox:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    BorderThickness: =1
                    ChevronBackground: =Theme.Color.Dark
                    ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                    ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                    ChevronHoverBackground: =ColorFade(RGBA(100, 118, 132, 1), -20%)
                    ChevronHoverFill: =RGBA(255, 255, 255, 1)
                    Color: =Theme.Color.Dark
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayFields: =["Text"]
                    FocusedBorderThickness: =0
                    Height: =25
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(205, 209, 213, 1)
                    IsSearchable: =false
                    Items: |-
                        =Table(
                            { Index: 1, Text: Coalesce(First(planDetails).categoryDescriptions.category1, "Category 1") },
                            { Index: 2, Text: Coalesce(First(planDetails).categoryDescriptions.category2, "Category 2") },
                            { Index: 3, Text: Coalesce(First(planDetails).categoryDescriptions.category3, "Category 3") },
                            { Index: 4, Text: Coalesce(First(planDetails).categoryDescriptions.category4, "Category 4") },
                            { Index: 5, Text: Coalesce(First(planDetails).categoryDescriptions.category5, "Category 5") },
                            { Index: 6, Text: Coalesce(First(planDetails).categoryDescriptions.category6, "Category 6") },
                            { Index: 7, Text: Coalesce(First(planDetails).categoryDescriptions.category7, "Category 7") },
                            { Index: 8, Text: Coalesce(First(planDetails).categoryDescriptions.category8, "Category 8") },
                            { Index: 9, Text: Coalesce(First(planDetails).categoryDescriptions.category9, "Category 9") },
                            { Index: 10, Text: Coalesce(First(planDetails).categoryDescriptions.category10, "Category 10") },
                            { Index: 11, Text: Coalesce(First(planDetails).categoryDescriptions.category11, "Category 11") },
                            { Index: 12, Text: Coalesce(First(planDetails).categoryDescriptions.category12, "Category 12") },
                            { Index: 13, Text: Coalesce(First(planDetails).categoryDescriptions.category13, "Category 13") },
                            { Index: 14, Text: Coalesce(First(planDetails).categoryDescriptions.category14, "Category 14") },
                            { Index: 15, Text: Coalesce(First(planDetails).categoryDescriptions.category15, "Category 15") },
                            { Index: 16, Text: Coalesce(First(planDetails).categoryDescriptions.category16, "Category 16") },
                            { Index: 17, Text: Coalesce(First(planDetails).categoryDescriptions.category17, "Category 17") },
                            { Index: 18, Text: Coalesce(First(planDetails).categoryDescriptions.category18, "Category 18") },
                            { Index: 19, Text: Coalesce(First(planDetails).categoryDescriptions.category19, "Category 19") },
                            { Index: 20, Text: Coalesce(First(planDetails).categoryDescriptions.category20, "Category 20") },
                            { Index: 21, Text: Coalesce(First(planDetails).categoryDescriptions.category21, "Category 21") },
                            { Index: 22, Text: Coalesce(First(planDetails).categoryDescriptions.category22, "Category 22") },
                            { Index: 23, Text: Coalesce(First(planDetails).categoryDescriptions.category23, "Category 23") },
                            { Index: 24, Text: Coalesce(First(planDetails).categoryDescriptions.category24, "Category 24") }
                        )
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =RGBA(32, 54, 71, 1)
                    SearchFields: =["Text"]
                    SearchItems: =[]
                    SelectionFill: =RGBA(100, 118, 132, 1)
                    Size: =10
                    Width: =325
                    X: =16
                    Y: =40
                    ZIndex: =8

            bucketFilter As groupContainer:
                Height: =102
                Width: =349
                X: =312
                ZIndex: =3

                lblBucketFilterTitle As label:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Size: =12
                    Text: ="Filter by bucket"
                    Width: =187
                    ZIndex: =7

                selectBucketFilter As combobox:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    BorderThickness: =1
                    ChevronBackground: =Theme.Color.Dark
                    ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                    ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                    ChevronHoverBackground: =ColorFade(RGBA(100, 118, 132, 1), -20%)
                    ChevronHoverFill: =RGBA(255, 255, 255, 1)
                    Color: =Theme.Color.Dark
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayFields: =["name"]
                    FocusedBorderThickness: =0
                    Height: =25
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(205, 209, 213, 1)
                    IsSearchable: =false
                    Items: =bucketsOfPlans
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =RGBA(32, 54, 71, 1)
                    SearchFields: =["id"]
                    SearchItems: =[]
                    SelectionFill: =RGBA(100, 118, 132, 1)
                    SelectMultiple: =false
                    Size: =10
                    Width: =325
                    X: =15
                    Y: =43
                    ZIndex: =8

            filterByStatus As groupContainer:
                Height: =102
                Width: =230
                X: =40
                ZIndex: =5

                cbMyTasksOnly As checkbox:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =Theme.Color.Dark
                    CheckboxSize: =30
                    CheckmarkFill: =Theme.Color.Dark
                    Color: =Theme.Color.Dark
                    Height: =35
                    HoverColor: =RGBA(32, 54, 71, 1)
                    PressedBorderColor: =White
                    Size: =12
                    Text: ="My tasks only"
                    Width: =210
                    X: =15
                    Y: =27
                    ZIndex: =1

                cbExcludeCompleted As checkbox:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =Theme.Color.Dark
                    CheckboxSize: =30
                    CheckmarkFill: =Theme.Color.Dark
                    Color: =Theme.Color.Dark
                    Height: =35
                    HoverColor: =RGBA(32, 54, 71, 1)
                    PressedBorderColor: =White
                    Size: =12
                    Text: ="Exclude completed"
                    Width: =210
                    X: =15
                    Y: =62
                    ZIndex: =2

                lblStatusFilterTitle As label:
                    BorderColor: =RGBA(32, 54, 71, 1)
                    Color: =Theme.Color.Dark
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FontWeight: =FontWeight.Semibold
                    Size: =12
                    Text: ="Filter by status"
                    Width: =187
                    ZIndex: =3

        iconBack As icon.BackArrow:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =Theme.Color.Dark
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =50
            Icon: =Icon.BackArrow
            OnSelect: =Navigate(scrPlans, Fade)
            Visible: =IsBlank(Param("plan"))
            Width: =50
            X: =15
            Y: =26
            ZIndex: =2

        iconRefreshTasks As icon.Reload:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =Theme.Color.Dark
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =50
            Icon: =Icon.Reload
            OnSelect: |-
                =If (varSkipRefresh, false,
                    ClearCollect(planTasks, [Blank()]);
                    Clear(planTasks);
                    ForAll(idsOfSelectedPlans,
                        Collect(planTasks, Planner.ListTasksV3(id, "").value)
                    );
                    // Add a blank row as the last task to enable adding new tasks
                    Collect(planTasks, { id: Blank()})
                );
            Visible: =!iconSaveChanges.Visible
            Width: =50
            X: =1303
            Y: =26
            ZIndex: =3

        iconSaveChanges As icon.Save:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(168, 0, 0, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =57
            Icon: =Icon.Save
            OnSelect: |-
                =ForAll(Filter(AddColumns(colTaskChanges, "parentTaskId", taskId), changeType = "POSITION_CHANGE"),
                    With(
                        {
                            // Value is position slider value
                            taskLength: DateDiff(taskItem.startDateTime, taskItem.dueDateTime, Days),
                            // Get original slider day (copied from slider Default prop)
                            originalSliderDay:
                                With({
                                    dayWidth: Value(lblSingleDayWidth.Text),
                                    leftOffset: canvas.X
                                },
                                With({
                                        currentTaskX: (taskItem.startDate - varStartDate - 1) * dayWidth 
                                            + dayWidth
                                    },
                                    currentTaskX / dayWidth + DateDiff(taskItem.startDate, taskItem.dueDateTime, Days) / 2
                                )
                            ),
                            endDateAddition: Coalesce(
                                First(
                                    Filter(colTaskChanges, changeType = "ENDDATE_CHANGE" && taskItem.id = parentTaskId)
                                ).value, 0),
                            positionChange: First(
                                Filter(colTaskChanges, changeType = "POSITION_CHANGE" && taskItem.id = parentTaskId)).value
                        },
                        Planner.UpdateTaskV3(
                            taskId,
                            {
                                startDateTime: DateAdd(taskItem.startDateTime, value - originalSliderDay, Days),
                                dueDateTime: 
                                    DateAdd(taskItem.dueDateTime, 
                                        Coalesce(positionChange, originalSliderDay) - originalSliderDay + endDateAddition, Days)
                            }
                        )
                    )
                );
                ForAll(Filter(colTaskChanges, changeType = "ENDDATE_CHANGE"),
                    // Only process ones that haven't been processed during POSITION_CHANGE
                    If(CountRows(Filter(colTaskChanges, changeType = "POSITION_CHANGE" && taskId = taskItem.id)) = 0,
                        Planner.UpdateTaskV3(
                            taskId,
                            {
                                // Value is correct date
                                dueDateTime: DateAdd(taskItem.dueDateTime, value, Days)
                            }
                        )
                    )
                );
                Clear(colTaskChanges);
                Select(iconRefreshTasks);
            Visible: =CountRows(colTaskChanges) > 0
            Width: =57
            X: =1296
            Y: =19
            ZIndex: =4

